---
import { Keystatic } from '@/components/keystatic'
import { Octokit } from '@octokit/core'
import { z } from 'astro:content'
import Layout from '@/layouts/default.astro'
import { ExclamationTriangleIcon } from '@radix-ui/react-icons'
import { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert'

const accessToken = Astro.cookies.get('keystatic-gh-access-token')

export const prerender = false

let error: { title: string; message: string } | undefined = undefined

if (accessToken) {
	const octokit = new Octokit({
		auth: accessToken.value,
	})

	const me = await octokit.request('GET /user', {
		headers: {
			'X-GitHub-Api-Version': '2022-11-28',
		},
	})

	try {
		await octokit.request(
			'GET /repos/{owner}/{repo}/collaborators/{username}',
			{
				owner: 'soulsspeedruns',
				repo: 'website',
				username: me.data.login,
				headers: {
					'X-GitHub-Api-Version': '2022-11-28',
				},
			},
		)
	} catch (e) {
		const result = z.object({ status: z.literal(404) }).safeParse(e)

		if (result.success) {
			error = {
				title: 'Forbidden',
				message: `The user ${me.data.login} is not part of the Team.`,
			}

			Astro.response.status = 403
		} else {
			throw e
		}
	}
}
---

{
	error ? (
		<Layout title="Unauthorized">
			<main class="container mx-auto mt-20 grid grid-cols-10">
				<div class="col-span-6 col-start-3">
					<Alert
						variant="destructive"
						className="mb-6"
					>
						<ExclamationTriangleIcon className="h-4 w-4" />
						<AlertTitle>{error.title}</AlertTitle>
						<AlertDescription>{error.message}</AlertDescription>
					</Alert>
					<p class="prose max-w-none dark:prose-invert">
						Please check <a href="/contribute">how to contribute</a>.
					</p>
				</div>
			</main>
		</Layout>
	) : (
		<Keystatic client:only="react" />
	)
}
