---
import '@/styles/tailwind.css'
import Navbar from '@/components/navbar.astro'

interface Props {
	title: string
}

const { title } = Astro.props
---

<html
	lang="en"
	class="scroll-pt-[calc(theme('spacing.16')+theme('spacing.2'))] [&_*]:!transition-none"
>
	<head>
		<meta charset="utf-8" />
		<link
			rel="icon"
			type="image/svg+xml"
			href="/favicon.svg"
		/>
		<meta
			name="viewport"
			content="width=device-width"
		/>
		<meta
			name="generator"
			content={Astro.generator}
		/>
		<link
			rel="sitemap"
			href="/sitemap-index.xml"
		/>
		<title>{title}</title>
	</head>
	<body class="!mr-[var(--removed-body-scroll-bar-size,'0px')]">
		<Navbar
			class="fixed left-0 right-0 top-0 !mr-[var(--removed-body-scroll-bar-size,'0px')] h-16"
		/>
		<slot />
	</body>
	<script is:inline>
		const transitionClass = '[&_*]:!transition-none'

		const matchMediaTheme = () => {
			return window.matchMedia('(prefers-color-scheme: dark)').matches
				? 'dark'
				: 'light'
		}

		const getThemePreference = () => {
			if (
				typeof localStorage !== 'undefined' &&
				localStorage.getItem('theme') &&
				localStorage.getItem('theme') !== 'system'
			) {
				return localStorage.getItem('theme') === 'dark' ? 'dark' : 'light'
			}

			return matchMediaTheme()
		}

		const isDark = getThemePreference() === 'dark'
		document.documentElement.classList[isDark ? 'add' : 'remove']('dark')
		document.documentElement.classList.remove(transitionClass)

		const observer = new MutationObserver(() => {
			const currentTheme = document.documentElement.classList.contains('dark')
				? 'dark'
				: 'light'
			const preferredTheme = matchMediaTheme()

			localStorage.setItem(
				'theme',
				currentTheme === preferredTheme ? 'system' : currentTheme,
			)
		})

		observer.observe(document.documentElement, {
			attributes: true,
			attributeFilter: ['class'],
		})

		const button = document.getElementById('mode-toggle')

		button.addEventListener('click', () => {
			document.documentElement.classList.add(transitionClass)

			const isDark = getThemePreference() === 'dark'
			document.documentElement.classList[isDark ? 'remove' : 'add']('dark')

			setTimeout(() => {
				document.documentElement.classList.remove(transitionClass)
			})
		})
	</script>
</html>
